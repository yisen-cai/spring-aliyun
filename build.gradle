plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'

    id "org.jetbrains.dokka" version "1.4.20"
    id "maven-publish"
    id 'signing'
}

group 'com.glancebar.aliyun'
version '0.0.1'


ext {
    springBootVersion = "2.4.1"
}

def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"

def publishURL = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

publishing {
    repositories {
        maven {
            name 'ossrh'
            url = publishURL
            credentials {
                username project.properties["ossrh.username"] as String
                password project.properties["ossrh.password"] as String
            }
        }
    }

    publications {
        maven(MavenPublication) {
            pom {
                name = 'spring-aliyun'
                description = 'Aliyun cloud serivces Spring Boot integration.'
                url = 'https://github.com/yisen-cai/spring-aliyun'
                properties = [
                        myProp          : "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yisen-cai'
                        name = 'Ethan Gary'
                        email = 'yisen614@gmail.com'
                        organization = 'GlanceBar'
                        organizationUrl = 'https://glancebar.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/yisen-cai/spring-aliyun.git'
                    developerConnection = 'scm:git:git@github.com:yisen-cai/spring-aliyun.git'
                    url = 'https://github.com/yisen-cai/spring-aliyun'
                }
            }
        }
    }
}


subprojects {
    apply plugin: 'maven-publish'

    publishing {
        repositories {
            maven {
                name 'ossrh'
                url = publishURL
                credentials {
                    username project.properties["ossrh.username"] as String
                    password project.properties["ossrh.password"] as String
                }
            }
        }

        publications {
            maven(MavenPublication) {
                pom {
                    name = project.name
                    description = 'Aliyun cloud serivces Spring Boot integration.'
                    url = 'https://github.com/yisen-cai/spring-aliyun/tree/main/' + project.name
                    properties = [
                            myProp          : "value",
                            "prop.with.dots": "anotherValue"
                    ]

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'yisen-cai'
                            name = 'Ethan Gary'
                            email = 'yisen614@gmail.com'
                            organization = 'GlanceBar'
                            organizationUrl = 'https://glancebar.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/yisen-cai/spring-aliyun.git'
                        developerConnection = 'scm:git:git@github.com:yisen-cai/spring-aliyun.git'
                        url = 'https://github.com/yisen-cai/spring-aliyun'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

